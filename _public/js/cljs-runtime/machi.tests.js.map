{"version":3,"sources":["machi/tests.cljs"],"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","names":["machi.tests/test-values","cljs.test/test-var","machi.tests/test-get-card","values__9192__auto__","cljs.core/List","result__9193__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9229__auto__","e37879","cljs.core/=","machi.util/get-card","cljs.core.get","machi.definitions/machi-cards","machi.tests/test-create-game","e37883","machi.util/create-game","machi.tests/test-add-player-card","e37884","machi.util/card-to-player","e37885","machi.tests/test-get-money","e37890","machi.util/get-player-money","machi.tests/test-money-management","e37891","machi.util/remove-add-cash-from-player","machi.tests/test-activate","e37892","machi.util/activate?","machi.tests/mtest","cljs.core/enable-console-print!","cljs.test/run-block","env37893","cljs.test.empty_env","summary37894","cljs.core/volatile!","cljs.core.concat","cljs.test/set-env!","cljs.test/do-report","cljs.test/block","env__9262__auto__","cljs.test/get-current-env","cljs.test/test-vars-block","cljs.test/clear-env!","cljs.core.partial","cljs.core/merge-with","cljs.core/+","cljs.test/get-and-clear-env!","cljs.core/deref","cljs.core.assoc","cljs.core.println","machi.util/get-cards-from-game","machi.util/create-card-stack"],"sourcesContent":["(ns machi.tests\n  (:require [cljs.test :refer-macros [deftest is testing run-tests]]\n            [machi.definitions :as cards]\n            [machi.util :as util]))\n\n(def test-values {:test-add-player-card {:card-stack []\n                                         :player-in-turn 1\n                                         :deck {\"Cheese Factory\" 6\n                                                \"Forest\" 6\n                                                \"Furniture Factory\" 6\n                                                \"Fruit and Vegetable Market\" 6\n                                                \"Wheat Field\" 6\n                                                \"Cafe\" 6\n                                                \"Mine\" 6\n                                                \"Family Restaurant\" 6\n                                                \"Convenience Store\" 6\n                                                \"Apple Orchard\" 6\n                                                \"Bakery\" 6\n                                                \"Ranch\" 6}\n                                     :num-player 0\n                                     :players [{:name \"Chad\"\n                                                :position 1\n                                                :cards {\"Wheat Field\" {:amount 1\n                                                                       :color \"b\"\n                                                                       :coin  1\n                                                                       :activation [1]}\n                                                        \"Bakery\" {:amount 1\n                                                                  :color \"g\"\n                                                                  :coin  1\n                                                                  :activation [2,3]}\n                                                        \"Mine\" {:amount 1\n                                                                :color \"b\"\n                                                                :coin  5\n                                                                :activation [9]}}\n                                                :money 3\n                                                :landmarks #{}}\n                                               {:name \"Tad\"\n                                                :position 2\n                                                :cards {\"Wheat Field\" {:amount 1\n                                                                       :color \"b\"\n                                                                       :coin  1\n                                                                       :activation [1]}\n                                                        \"Bakery\" {:amount 1\n                                                                  :color \"g\"\n                                                                  :coin  1\n                                                                  :activation [2,3]}}\n                                                :money 3\n                                                :landmarks #{}}]}\n                  :test-create-game {:card-stack []\n                                     :player-in-turn 1\n                                                       :deck {\"Cheese Factory\" 6\n                                                              \"Forest\" 6\n                                                              \"Furniture Factory\" 6\n                                                              \"Fruit and Vegetable Market\" 6\n                                                              \"Wheat Field\" 6\n                                                              \"Cafe\" 6\n                                                              \"Mine\" 6\n                                                              \"Family Restaurant\" 6\n                                                              \"Convenience Store\" 6\n                                                              \"Apple Orchard\" 6\n                                                              \"Bakery\" 6\n                                                              \"Ranch\" 6}\n                                                       :num-player 0\n                                     :players [{:name \"Chad\"\n                                                :position 1\n                                                :cards {\"Wheat Field\" {:amount 1\n                                                                       :color \"b\"\n                                                                       :coin  1\n                                                                       :activation [1]}\n                                                        \"Bakery\" {:amount 1\n                                                                  :color \"g\"\n                                                                  :coin  1\n                                                                  :activation [2,3]}}\n                                                :money 3\n                                                :landmarks #{}}\n                                               {:name \"Tad\"\n                                                :position 2\n                                                :cards {\"Wheat Field\" {:amount 1\n                                                                       :color \"b\"\n                                                                       :coin  1\n                                                                       :activation [1]}\n                                                        \"Bakery\" {:amount 1\n                                                                  :color \"g\"\n                                                                  :coin  1\n                                                                  :activation [2,3]}}\n                                                :money 3\n                                                :landmarks #{}}]}\n                  :test-rac {:card-stack []\n                             :player-in-turn 1\n                                               :deck {\"Cheese Factory\" 6\n                                                      \"Forest\" 6\n                                                      \"Furniture Factory\" 6\n                                                      \"Fruit and Vegetable Market\" 6\n                                                      \"Wheat Field\" 6\n                                                      \"Cafe\" 6\n                                                      \"Mine\" 6\n                                                      \"Family Restaurant\" 6\n                                                      \"Convenience Store\" 6\n                                                      \"Apple Orchard\" 6\n                                                      \"Bakery\" 6\n                                                      \"Ranch\" 6}\n                                               :num-player 0\n                             :players [{:name \"Chad\"\n                                        :position 1\n                                        :cards {\"Wheat Field\" {:amount 1\n                                                               :color \"b\"\n                                                               :coin  1\n                                                               :activation [1]}\n                                                \"Bakery\" {:amount 1\n                                                          :color \"g\"\n                                                          :coin  1\n                                                          :activation [2,3]}\n                                                \"Cafe\" {:amount 1\n                                                        :color \"r\"\n                                                        :coin  1\n                                                        :activation [3]}\n                                                \"Stadium\" {:amount 1\n                                                           :color \"p\"\n                                                           :coin  2\n                                                           :activation [6]}}\n                                        :money 3\n                                        :landmarks #{}}\n                                       {:name \"Tad\"\n                                        :position 2\n                                        :cards {\"Wheat Field\" {:amount 1\n                                                               :color \"b\"\n                                                               :coin  1\n                                                               :activation [1]}\n                                                \"Bakery\" {:amount 1\n                                                          :color \"g\"\n                                                          :coin  1\n                                                          :activation [2,3]}\n                                                \"Cafe\" {:amount 1\n                                                        :color \"r\"\n                                                        :coin  1\n                                                        :activation [3]}\n                                                \"Stadium\" {:amount 1\n                                                           :color \"p\"\n                                                           :coin  2\n                                                           :activation [6]}}\n                                        :money 3\n                                        :landmarks #{}}]}\n                  :test-add-player-card-true {:card-stack []\n                                              :player-in-turn 1\n                                                       :deck {\"Cheese Factory\" 6\n                                                              \"Forest\" 6\n                                                              \"Furniture Factory\" 6\n                                                              \"Fruit and Vegetable Market\" 6\n                                                              \"Wheat Field\" 6\n                                                              \"Cafe\" 6\n                                                              \"Mine\" 6\n                                                              \"Family Restaurant\" 6\n                                                              \"Convenience Store\" 6\n                                                              \"Apple Orchard\" 6\n                                                              \"Bakery\" 6\n                                                              \"Ranch\" 6}\n                                                       :num-player 0\n                                                       :players [{:name \"Chad\"\n                                                                  :position 1\n                                                                  :cards {\"Wheat Field\" {:amount 1\n                                                                                         :color \"b\"\n                                                                                         :coin  1\n                                                                                         :activation [1]}\n                                                                          \"Bakery\" {:amount 2\n                                                                                    :color \"g\"\n                                                                                    :coin  1\n                                                                                    :activation [2,3]}}\n                                                                  :money 3\n                                                                  :landmarks #{}}\n                                                                 {:name \"Tad\"\n                                                                  :position 2\n                                                                  :cards {\"Wheat Field\" {:amount 1\n                                                                                         :color \"b\"\n                                                                                         :coin 1\n                                                                                         :activation [1]}\n                                                                          \"Bakery\" {:amount 1\n                                                                                    :color \"g\"\n                                                                                    :coin 1\n                                                                                    :activation [2,3]}}\n                                                                  :money 3\n                                                                  :landmarks #{}}]}})\n\n(deftest test-get-card\n  (is (= (util/get-card \"Mine\") (get cards/machi-cards \"Mine\"))))\n\n(deftest test-create-game\n  (is (= (util/create-game [[1,\"Chad\"],[2,\"Tad\"]]) (get test-values :test-create-game))))\n\n(deftest test-add-player-card\n  (is (= (util/card-to-player (get test-values :test-create-game) 0 \"Mine\") (get test-values :test-add-player-card)))\n  (is (= (util/card-to-player (get test-values :test-create-game) 0 \"Bakery\") (get test-values :test-add-player-card-true))))\n\n(deftest test-get-money\n  (is (= (util/get-player-money (get test-values :test-create-game) 0) 3)))\n\n(deftest test-money-management\n  (is (= (util/get-player-money (util/remove-add-cash-from-player (get test-values :test-create-game) 0 3) 0) 6)))\n\n(deftest test-activate\n  (is (= (util/activate? (util/get-card \"Wheat Field\") 1) true)))\n\n; (deftest test-get-cards-from-game\n;   (is (= (util/get-cards-from-game :test-create-game) [\"W\",\"\",\"\",\"\"])))\n\n(defn mtest\n  []\n  (enable-console-print!)\n  (cljs.test/run-tests)\n  (println \"Finished Tests\")\n  (println (util/get-cards-from-game (get test-values :test-create-game)))\n  (println (util/get-player-money (util/remove-add-cash-from-player (get test-values :test-create-game) 0 3) 0))\n  (println (util/create-card-stack (get test-values :test-create-game) 0 1 0))\n  ;;(println (util/create-card-stack (get test-values :test-rac) 0 1 1))\n  ;;(println (util/create-card-stack (get test-values :test-rac) 0 3 3))\n  ;;(println (util/create-card-stack (get test-values :test-rac) 0 0 3))\n  )\n"]}